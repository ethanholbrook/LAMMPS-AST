# LAMMPS script for a 16‐atom BCC tungsten simulation at 3000 K using NVE dynamics
# Based on the description: 
#   - 16 W atoms in a BCC lattice (2×2×2 conventional cells) with PBC
#   - Equilibration at 3000 K
#   - Total simulation time of 7.5 ps
#   - 1000 time samples
# Requires LAMMPS (Nov 2021 or later) compiled with ML-IAP, PYTHON, and ML-SNAP packages
# and with the MLIAP_ENABLE_PYTHON and BUILD_SHARED_LIBS flags enabled.
#
# Below, pair_style and pair_coeff are placeholders—replace them with the specific
# ML-IAP or other potential files appropriate for your system.

# 0) Initialization
units           metal
dimension       3
boundary        p p p
atom_style      atomic

# 1) Create a BCC lattice with 16 W atoms (2×2×2 conventional unit cells)
variable        a equal 3.1652          # Approx. W lattice constant in Å
lattice         bcc ${a}
region          box block 0 2 0 2 0 2 units lattice
create_box      1 box
create_atoms    1 box

# 2) Define masses
mass            1 183.84                # Atomic mass of tungsten

# 3) Choose and set a potential (example placeholder below)
#    Replace "tungsten_ml_model.json" with the actual file/model for ML-IAP or another potential
pair_style      ml-iap
pair_coeff      * * tungsten_ml_model.json W

# 4) Equilibration at 3000 K
#    First, create velocities at the target temperature
velocity        all create 3000.0 12345 dist gaussian
timestep        0.001                 # 1 fs time step

#    Use NVT for short equilibration (e.g., 0.5 ps)
fix             eq all nvt temp 3000.0 3000.0 0.1
thermo_style    custom step temp ke pe etotal
thermo          100
run             500                   # 0.5 ps of NVT (500 steps × 1 fs)

# 5) Switch to NVE (production) for 7.5 ps
unfix           eq
fix             1 all nve

#    For 7.5 ps at 1 fs/step, we need 7500 steps
#    We'll record 1000 time samples. One way is to dump/thermo every ~7 or 8 steps
thermo          8
dump            myDump all custom 8 tungsten_nve.dump id type x y z vx vy vz

run             7500

# End of script
