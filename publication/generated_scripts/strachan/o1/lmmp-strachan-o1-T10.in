# ----------------------------------------------------------
# LAMMPS script for a 2D Lennard-Jones cluster of N=100
# cutoff = 3.0 sigma, sigma=1, epsilon=1 in LJ reduced units
# ----------------------------------------------------------

# 1) Basic setup
clear
units        lj
dimension    2
atom_style   atomic

# Shrink-wrap in x,y; periodic in z (irrelevant for 2D)
boundary     s s p

# 2) Define variables for number of atoms, target density
#    (rho = 0.75 => area = N / rho => region side ~ sqrt(area))
variable     N       equal 100
variable     rho     equal 0.75
variable     area    equal ${N}/${rho}          # total 2D area
variable     L       equal sqrt(${area})        # box side length

# 3) Create simulation box in the XY plane
region       box     block  0 ${L} 0 ${L} -0.5 0.5
create_box   1 box

# 4) Populate box with a 2D lattice (hex/close-packed) at approximate density rho
#    - For a 2D triangular lattice: area per lattice site = sqrt(3)/2 * a^2
#    - We approximate 'a' so that total area will hold enough atoms
#      that we can cut out ~100 afterwards.

# This variable is a rough guess for the lattice spacing 'a'.
# We'll create more than 100 atoms, then delete outside a chosen circle.
variable     a   equal sqrt( (2.0*${area})/(sqrt(3.0)*${N}) )
lattice      hex ${a}
create_atoms 1 box

# 5) Cut out a circular drop in the center (approx. radius = sqrt(area/pi))
variable     r    equal sqrt(${area}/3.14159)
# We center the cylinder at (L/2, L/2) in X,Y, and small thickness in Z
region       drop cylinder z ${L}/2 ${L}/2 ${r} -0.5 0.5 side in
group        droplet region drop

# Delete all atoms that are NOT in "droplet" region
delete_atoms group !=droplet

# By now, we should have ~N=100 atoms in a roughly circular cluster.

# 6) LJ potential with cutoff 3.0 sigma
pair_style   lj/cut 3.0
pair_coeff   1 1 1.0 1.0 3.0
mass         1 1.0

# 7) Neighbor settings (to reduce chance of lost neighbors at large cutoff)
neighbor     0.3 bin
neigh_modify every 1 delay 0 check yes

# 8) Initialize velocities.
#    You will likely have to tune this temperature
#    to achieve the desired total energy E (e.g., -1.1 epsilon).
velocity     all create 1.0 12345

# 9) (Optional) Short NVT to quickly relax
fix          therm all nvt temp 1.0 1.0 0.1
timestep     0.0025    # same order as 0.0025 t_0 in method

thermo_style custom step time temp pe ke etotal
thermo       100

run          2000      # short relaxation

# 10) Switch to Microcanonical (NVE) to conserve energy
unfix        therm
fix          nveall all nve

# Letâ€™s do a longer run in NVE
run          10000

# At this point, check your output for 'etotal' ~ -1.1, etc.
# If not correct, you can rerun with a different "velocity create" 
# or length/temperature of the NVT step to tune the final total energy.

# ----------------------------------------------------------
# Below, an example of how one might measure radial profiles
# to mimic the "ten concentric circular regions" analysis.
# ----------------------------------------------------------

# 11) Define variables for distance from the (nominal) center
#     We assume the center is at (L/2, L/2). 
#     For more precise "center-of-mass" referencing, see compute com.
variable     dx atom x - (${L}/2)
variable     dy atom y - (${L}/2)
variable     r  atom sqrt(v_dx^2 + v_dy^2)

# We'll create 10 radial bins from r=0 up to rmax (~ circle radius).
# If the drop expands, you might want to increase rmax or do 'auto' binning.
compute      radChunks all chunk/atom bin/1d v_r 0.0 ${r} 10 units box

# 12) Average chunk velocities over time
#     This saves average vx, vy, vz per bin to a file each N timesteps.
fix          velProf all ave/chunk 50 200 10000 radChunks vx vy vz norm sample file radial_vel.txt

# 13) Compute chunk temperatures 
#     (this is a *raw* chunk temperature, not subtracting out the radial flow).
compute      Tchunk all temp/chunk radChunks
fix          TProf all ave/time 50 200 10000 c_Tchunk[*] file radial_temp.txt mode vector

# 14) Continue the run, sampling radial profiles
run          20000

# ----------------------------------------------------------
# END of script
# ----------------------------------------------------------
