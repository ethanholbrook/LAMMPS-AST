# -----------------------------------------------------------
# LAMMPS Input Script for High-Velocity Impact of Nb Single Crystals
# Simulates spall failure by impacting a Nb projectile onto a Nb target.
#
# - The projectile is built by replicating the Nb BCC unit cell 
#   20×20×20 times along [100], [010], [001].
# - The target is built by replicating the unit cell 20×20×40 times.
# - A gap of 1.5 nm (15 Å) is placed between the two blocks along [001].
# - Periodic boundary conditions are applied in x and y (normal to [001])
#   and free boundaries (non-periodic) in z.
# - The system is equilibrated at 300 K (isochoric NVT) for 100 ps.
# - A velocity of 2 km/s (20 Å/ps) is added to the projectile atoms
#   in the +z direction (i.e. toward the target), after which the simulation
#   is continued adiabatically (NVE).
#
# Potential: EAM potential by Fellinger et al. (from openKIM)
# -----------------------------------------------------------

units           metal
dimension       3
boundary        p p f           # Periodic in x,y; free in z
atom_style      atomic

# ---------------------------
# Define lattice and simulation box
# ---------------------------
# Set lattice constant (in Å). For Nb BCC, a ≈ 3.3 Å.
variable        a equal 3.3

# Define the sizes of the two crystals
# Projectile: 20 unit cells thick (20*a)
# Target: 40 unit cells thick (40*a)
variable        proj_thick equal 20*${a}
variable        targ_thick equal 40*${a}
# Gap between projectile and target: 1.5 nm = 15 Å
variable        gap equal 15.0
# Lateral (x,y) replication: 20 unit cells → Lxy = 20*a
variable        Lxy equal 20*${a}
# Total simulation box in z: projectile + gap + target
variable        Lz equal ${proj_thick}+${gap}+${targ_thick}

# Create the overall simulation box.
region          simbox block 0 ${Lxy} 0 ${Lxy} 0 ${Lz} units box
create_box      1 simbox

# ---------------------------
# Create the Projectile
# ---------------------------
# Define the region for the projectile: from z = 0 to z = proj_thick.
region          proj_region block 0 ${Lxy} 0 ${Lxy} 0 ${proj_thick} units box

# Set up the lattice for the projectile.
# (Here the crystal is oriented along the standard [100], [010], [001] directions.)
lattice         bcc ${a} orient x 1 0 0 orient y 0 1 0 orient z 0 0 1 origin 0 0 0
create_atoms    1 region proj_region

# ---------------------------
# Create the Target
# ---------------------------
# The target will lie above the projectile with a gap.
# Its lower z-boundary is: proj_thick + gap.
variable        zmin_targ equal ${proj_thick}+${gap}
region          targ_region block 0 ${Lxy} 0 ${Lxy} ${zmin_targ} ${Lz} units box

# To have the target’s lattice “start” at z = zmin_targ, reset the lattice origin.
lattice         bcc ${a} orient x 1 0 0 orient y 0 1 0 orient z 0 0 1 origin 0 0 ${zmin_targ}
create_atoms    1 region targ_region

# ---------------------------
# Define Groups
# ---------------------------
group           projectile region proj_region
group           target region targ_region

# ---------------------------
# Define the Interatomic Potential
# ---------------------------
pair_style      eam/fs
pair_coeff      * * Nb.fs Nb

# ---------------------------
# Set Neighbors and Timestep
# ---------------------------
neighbor        2.0 bin
neigh_modify    every 1 delay 0 check yes

timestep        0.001         # Time step in ps

# ---------------------------
# Set Output (Thermo and Dump)
# ---------------------------
thermo          1000
dump            1 all atom 1000 dump.lammpstrj

# ---------------------------
# Equilibration (Isochoric NVT at 300 K for 100 ps)
# ---------------------------
fix             1 all nvt temp 300 300 0.1
run             100000        # 100,000 steps × 0.001 ps = 100 ps

# ---------------------------
# Impact: Add Projectile Velocity and Run Adiabatic MD
# ---------------------------
unfix           1           # Remove thermostat

# Add a constant velocity to the projectile atoms.
# 2 km/s = 2000 m/s. In metal units: 1 Å/ps ≈ 100 m/s, so 2000/100 = 20 Å/ps.
velocity        projectile add 0.0 0.0 20.0 sum yes

# Switch to NVE (adiabatic MD) to simulate the impact and subsequent expansion.
fix             2 all nve

# Run the impact simulation (here, 50 ps is used as an example).
run             50000        # 50,000 steps × 0.001 ps = 50 ps

# ---------------------------
# End of Script
# ---------------------------
